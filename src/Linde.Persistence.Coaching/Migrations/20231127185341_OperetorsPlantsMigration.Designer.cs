// <auto-generated />
using System;
using Linde.Persistence.Coaching;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Linde.Persistence.Coaching.Migrations
{
    [DbContext(typeof(CoachingDbContext))]
    [Migration("20231127185341_OperetorsPlantsMigration")]
    partial class OperetorsPlantsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Linde.Domain.Coaching.ActivityAggregate.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ActivityId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CAT_ACTIVITIES", "dbo");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.CountryAggregate.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OriginalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CAT_COUNTRY", "dbo");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.DivisionAggregate.Division", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DivisionId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CAT_DIVISIONS", "dbo");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.Entities.Catalogs.Plant", b =>
                {
                    b.Property<Guid>("PlantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlantId");

                    b.Property<string>("Bu")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Bu");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("City");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Division");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Municipality");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Name");

                    b.Property<Guid>("PlantManagerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlantManagerId");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("State");

                    b.Property<Guid>("SuperintendentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SuperintendentId");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("PlantId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PlantManagerId");

                    b.HasIndex("SuperintendentId");

                    b.ToTable("CAT_PLANT", "dbo");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.Entities.Catalogs.RolePlant", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "PlantId", "RoleId");

                    b.HasIndex("PlantId");

                    b.HasIndex("RoleId");

                    b.ToTable("ASOC_ROLE_PLANT", "dbo");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.PermissionAggregate.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PermissionId");

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("CAT_PERMISSION", "dbo");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.RoleAggregate.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CAT_ROLE", "dbo");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.UserAggreagate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lockout")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("CAT_USER", "dbo");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.Entities.Catalogs.Plant", b =>
                {
                    b.HasOne("Linde.Domain.Coaching.CountryAggregate.Country", "Country")
                        .WithMany("Plants")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Linde.Domain.Coaching.UserAggreagate.User", "UserManager")
                        .WithMany("PlantManager")
                        .HasForeignKey("PlantManagerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Linde.Domain.Coaching.UserAggreagate.User", "UserSuperIntendent")
                        .WithMany("PlantSuperIntendet")
                        .HasForeignKey("SuperintendentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("UserManager");

                    b.Navigation("UserSuperIntendent");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.Entities.Catalogs.RolePlant", b =>
                {
                    b.HasOne("Linde.Domain.Coaching.Entities.Catalogs.Plant", "Plant")
                        .WithMany("RolePlants")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Linde.Domain.Coaching.RoleAggregate.Role", "Role")
                        .WithMany("RolePlants")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Linde.Domain.Coaching.UserAggreagate.User", "User")
                        .WithMany("RolePlants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.RoleAggregate.Role", b =>
                {
                    b.OwnsMany("Linde.Domain.Coaching.RoleAggregate.Entities.RolePermission", "PermissionItems", b1 =>
                        {
                            b1.Property<Guid>("RoleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("PermissionId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("CreatedBy")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("RoleId", "PermissionId");

                            b1.HasIndex("PermissionId");

                            b1.ToTable("ASOC_ROLE_PERMISSION", "dbo");

                            b1.HasOne("Linde.Domain.Coaching.PermissionAggregate.Permission", "Permission")
                                .WithMany()
                                .HasForeignKey("PermissionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("RoleId");

                            b1.Navigation("Permission");
                        });

                    b.Navigation("PermissionItems");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.UserAggreagate.User", b =>
                {
                    b.OwnsMany("Linde.Domain.Coaching.UserAggreagate.Entities.UserCountry", "CountryItems", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("CountryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("CreatedBy")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("UserId", "CountryId");

                            b1.HasIndex("CountryId");

                            b1.ToTable("ASOC_USER_COUNTRY", "dbo");

                            b1.HasOne("Linde.Domain.Coaching.CountryAggregate.Country", "Country")
                                .WithMany()
                                .HasForeignKey("CountryId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.Navigation("Country");
                        });

                    b.OwnsMany("Linde.Domain.Coaching.UserAggreagate.Entities.UserRole", "RoleItems", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("RoleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("CreatedBy")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("UserId", "RoleId");

                            b1.HasIndex("RoleId");

                            b1.ToTable("ASOC_USER_ROLE", "dbo");

                            b1.HasOne("Linde.Domain.Coaching.RoleAggregate.Role", "Role")
                                .WithMany()
                                .HasForeignKey("RoleId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.Navigation("Role");
                        });

                    b.OwnsOne("Linde.Domain.Coaching.UserAggreagate.ValueObjects.FullName", "FullName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstSurname")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("FirstSurname");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Name");

                            b1.Property<string>("SecondSurname")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("SecondSurname");

                            b1.HasKey("UserId");

                            b1.ToTable("CAT_USER", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("CountryItems");

                    b.Navigation("FullName")
                        .IsRequired();

                    b.Navigation("RoleItems");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.CountryAggregate.Country", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.Entities.Catalogs.Plant", b =>
                {
                    b.Navigation("RolePlants");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.RoleAggregate.Role", b =>
                {
                    b.Navigation("RolePlants");
                });

            modelBuilder.Entity("Linde.Domain.Coaching.UserAggreagate.User", b =>
                {
                    b.Navigation("PlantManager");

                    b.Navigation("PlantSuperIntendet");

                    b.Navigation("RolePlants");
                });
#pragma warning restore 612, 618
        }
    }
}
